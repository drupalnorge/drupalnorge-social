# Drupal 8 recipe
name: dnorge

# Start with the default Drupal 8 recipe
recipe: drupal8

# Configure the Drupal8 recipe
config:

  # See: https://www.drupal.org/docs/8/system-requirements

  # Optionally specify the php version to use.
  #
  # If ommitted this will default to the latest php version supported by Drupal 8.
  # Consult the `php` service to see what versions are available. Note that all
  # such versions may not be supported in Drupal 8s so YMMV.
  #
  # See: https://www.drupal.org/docs/8/system-requirements/php
  #
  # NOTE: that this needs to be wrapped in quotes so that it is a string
  #
  php: '7.0'

  # Optionally specify whether you want to serve drupal via nginx or apache
  #
  # If ommitted this will default to the latest apache
  #
  # See: https://www.drupal.org/docs/8/system-requirements/web-server
  #
  via: nginx

  # Optionally specify the location of the webroot relative to your approot.
  #
  # If ommitted this will be your approot itself.
  #
  webroot: html/

  # Optionally specify how you want Lando to handle Drush. There are a few options
  #
  # If omitted this will install the Drush Launcher and assume you've installed a
  # site-local version of Drush with Composer
  #
  # You can also configure it in the following ways:
  #
  # 1. Install via Composer
  #
  # This will install the Drush Launcher (https://github.com/drush-ops/drush-launcher)
  # and will delegate to the site-local version of Drush you've installed with Composer
  # http://docs.drush.org/en/master/install/
  # drush: composer
  #
  # 2. Install Globally
  #
  # This will globally install the corresponding Drush 8 PHAR posted over at
  # https://github.com/drush-ops/drush/releases
  # drush: global:8.1.12
  #
  # This will ATTEMPT to globally install any pre Drush 8 versions via Composer
  # drush: global:~7
  #
  # 3. Specify a path
  #
  # This assumes the user has already installed Drush but wishes to tell Lando where
  # it exists.
  # drush: path:/app/vendor/bin/drush
  #
  # 4. Do nothing
  #
  # This will tell Lando to not do anything, e.g. it's up to the user
  # drush: false
  #
  drush: composer

  # Optionally specify whether you want to disable the global install of drupal console.
  #
  # You should also consider a site-local install of drupal console via composer
  #
  # See: https://hechoendrupal.gitbooks.io/drupal-console/content/en/getting/composer.html
  #
  # drupal: false

  # Optionally specify the database type, this can be one of:
  #
  #   - `mysql`
  #   - `mariadb`
  #   - `postgres`
  #
  # If ommitted this will default to the latest mysql. You can additionally provide
  # a version with `type:version` but you will need to consult the documentation
  # for the correct DB service to see what versions are available
  #
  # see: https://www.drupal.org/docs/8/system-requirements/database-server
  #
  database: mariadb

  # Optionally activate xdebug
  #
  # If you are having trouble getting xdebug to work please see:
  # https://docs.devwithlando.io/services/php.html#using-xdebug
  xdebug: true

  # Optionally mix in your own config files
  #
  # If ommitted this will use "sane defaults" for your recipe type
  # conf:

    # For more information on setting these files check out the documentation
    # and examples
    #
    # Docs: https://docs.devwithlando.io/services/php.html
    # Examples: https://github.com/lando/lando/tree/master/examples
    #
    # server: config/drupal8.conf
    # php: config/php.ini

    # For more information on setting these files check out the documentation
    # and examples for the relevant services:
    #
    # MySQL: https://docs.devwithlando.io/services/mysql.html
    # MariaDB: https://docs.devwithlando.io/services/mariadb.html
    # PostGres: https://docs.devwithlando.io/services/postgres.html
    #
    # Examples: https://github.com/lando/lando/tree/master/examples
    #
    # database: config/mysql


# Configure services to Drupal8
services:
  appserver:
    overrides:
      services:
        environment:
          COMPOSER_PROCESS_TIMEOUT: 6000

  # PhpMyAdmin
  # Add a phpmyadmin db frontend
  pma:

    # Use the latest stable version of phpmyadmin
    type: phpmyadmin

    # The databases you want to look at, this will default to a service called
    # "database"
    #
    # You might want to run `lando info` on your app to see what databases you
    # have available
    hosts:
      - database

      
# Add in some custom event scripting
# events:

# Run some commands after `lando start`
  # post-start:
     # Composer install command
     # - "cd $LANDO_MOUNT && composer install"


# Lets make a high level wrapper that runs various test commands
# Ideally you'd put more than just one thing in here
tooling:
  test:
    service: appserver
    description: Run our tests
    cmd: composer test
  install:
    service: appserver
    description: Installing the DrupalNorge site WITH database
    cmd: composer install-site
  install-nodb:
    service: appserver
    description: Installing the DrupalNorge site WITHOUT database.
    cmd: composer install
  up-site:
    service: appserver
    description: Upgrade the DrupalNorge via composer.json
    cmd: composer up-site
  up-db:
    service: appserver
    description: Repleace the latest database from DrupalNorge
    cmd: composer up-db
  resetadmin:
    service: appserver
    description: Reset admin password
    cmd: composer resetadmin